package handlers

import (
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"log"
)

func HandleMessage(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	switch {
	case update.Message.Text != "":
		// –≠—Ö–æ-–æ—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, update.Message.Text)
		_, err := bot.Send(msg)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
		}

	case update.Message.Sticker != nil:
		// –≠—Ö–æ-–æ—Ç–≤–µ—Ç –Ω–∞ —Å—Ç–∏–∫–µ—Ä
		msg := tgbotapi.NewSticker(update.Message.Chat.ID, tgbotapi.FileID(update.Message.Sticker.FileID))
		_, err := bot.Send(msg)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∏–∫–µ—Ä–∞:", err)
		}

	case update.Message.Photo != nil:
		// –≠—Ö–æ-–æ—Ç–≤–µ—Ç –Ω–∞ —Ñ–æ—Ç–æ
		photo := update.Message.Photo[len(update.Message.Photo)-1] // –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
		msg := tgbotapi.NewPhoto(update.Message.Chat.ID, tgbotapi.FileID(photo.FileID))
		_, err := bot.Send(msg)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ:", err)
		}

	case update.Message.Voice != nil:
		// –≠—Ö–æ-–æ—Ç–≤–µ—Ç –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		msg := tgbotapi.NewVoice(update.Message.Chat.ID, tgbotapi.FileID(update.Message.Voice.FileID))
		_, err := bot.Send(msg)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
		}

	case update.Message.Video != nil:
		// –≠—Ö–æ-–æ—Ç–≤–µ—Ç –Ω–∞ –≤–∏–¥–µ–æ
		msg := tgbotapi.NewVideo(update.Message.Chat.ID, tgbotapi.FileID(update.Message.Video.FileID))
		_, err := bot.Send(msg)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ:", err)
		}

	case update.Message.VideoNote != nil:
		// –≠—Ö–æ-–æ—Ç–≤–µ—Ç –Ω–∞ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ (–∫—Ä—É–∂–æ—á–µ–∫)
		msg := tgbotapi.NewVideoNote(update.Message.Chat.ID, update.Message.VideoNote.Length, tgbotapi.FileID(update.Message.VideoNote.FileID))
		_, err := bot.Send(msg)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è:", err)
		}

	case update.Message.Document != nil:
		// –≠—Ö–æ-–æ—Ç–≤–µ—Ç –Ω–∞ —Ñ–∞–π–ª
		document := update.Message.Document

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –º—É–∑—ã–∫–∞–ª—å–Ω—ã–º (–ø–æ MIME-—Ç–∏–ø—É –∏–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é)
		if document.MimeType == "audio/mpeg" || document.MimeType == "audio/ogg" || document.FileName[len(document.FileName)-4:] == ".mp3" || document.FileName[len(document.FileName)-4:] == ".ogg" {
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ—Ñ–∞–π–ª
			msg := tgbotapi.NewAudio(update.Message.Chat.ID, tgbotapi.FileID(document.FileID))
			_, err := bot.Send(msg)
			if err != nil {
				log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞:", err)
			}
		} else {
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç
			msg := tgbotapi.NewDocument(update.Message.Chat.ID, tgbotapi.FileID(document.FileID))
			_, err := bot.Send(msg)
			if err != nil {
				log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞:", err)
			}
		}

	case update.Message.Audio != nil:
		// –≠—Ö–æ-–æ—Ç–≤–µ—Ç –Ω–∞ –∞—É–¥–∏–æ
		msg := tgbotapi.NewAudio(update.Message.Chat.ID, tgbotapi.FileID(update.Message.Audio.FileID))
		_, err := bot.Send(msg)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—É–¥–∏–æ:", err)
		}

	case update.Message.Location != nil:
		// –≠—Ö–æ-–æ—Ç–≤–µ—Ç –Ω–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
		location := update.Message.Location
		msg := tgbotapi.NewLocation(update.Message.Chat.ID, location.Latitude, location.Longitude)
		_, err := bot.Send(msg)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è:", err)
		}

	case update.Message.Poll != nil:
		// –≠—Ö–æ-–æ—Ç–≤–µ—Ç –Ω–∞ –æ–ø—Ä–æ—Å
		poll := update.Message.Poll

		// –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
		var options []string
		for _, option := range poll.Options {
			options = append(options, option.Text)
		}

		// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–ø—Ä–æ—Å —Å —Ç–µ–º–∏ –∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
		newPoll := tgbotapi.NewPoll(update.Message.Chat.ID, poll.Question, options...)
		newPoll.IsAnonymous = poll.IsAnonymous
		newPoll.Type = poll.Type
		newPoll.AllowsMultipleAnswers = poll.AllowsMultipleAnswers
		newPoll.CorrectOptionID = int64(poll.CorrectOptionID)

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø—Ä–æ—Å
		_, err := bot.Send(newPoll)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–ø—Ä–æ—Å–∞:", err)
		}

	case update.Message.Contact != nil:
		// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
		contact := update.Message.Contact

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ç–æ–º –∂–µ –≤–∏–¥–µ
		msg := tgbotapi.NewContact(update.Message.Chat.ID, contact.PhoneNumber, contact.FirstName)
		_, err := bot.Send(msg)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞:", err)
		}

	default:
		// –û—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–Ø –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è üòÖ")
		_, err := bot.Send(msg)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
		}
	}
}
